[
  {
    "pk": 57,
    "model": "workflows.category",
    "fields": {
      "uid": "1e366c76-9a29-4b3b-bcca-4089d89bc8ba",
      "parent": null,
      "workflow": null,
      "user": null,
      "order": 1,
      "name": "Scikit_classifiers"
    }
  },
  {
    "pk": 208,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 57,
      "treeview_image": "",
      "name": "Create Integer List",
      "is_streaming": false,
      "uid": "92c49065-6cc2-47e1-87f1-e6f6777661a3",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "construction_work .png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "scikit_classifiers_create_integers",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 547,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 208,
      "name": "Integer List String",
      "short_name": "str",
      "uid": "0bb39532-7e5d-4f51-944f-51cb099511ef",
      "default": "3\r\n2\r\n1\r\n4",
      "required": false,
      "multi": false,
      "parameter_type": "textarea",
      "variable": "intStr",
      "parameter": true,
      "order": 1,
      "description": "Comma or new-line separated list of integers"
    }
  },
  {
    "pk": 548,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 208,
      "name": "Sort list",
      "short_name": "bol",
      "uid": "b66484cc-0785-4d93-aeef-41bf0f886914",
      "default": "true",
      "required": true,
      "multi": false,
      "parameter_type": "checkbox",
      "variable": "sort",
      "parameter": true,
      "order": 2,
      "description": "Should the list be sorted"
    }
  },
  {
    "pk": 216,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 208,
      "name": "Integer List",
      "short_name": "lst",
      "variable": "intList",
      "uid": "52d65fa7-f694-462b-af0b-96750c01e4b2",
      "order": 1,
      "description": "List of integers"
    }
  },
  {
    "pk": 209,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 57,
      "treeview_image": "",
      "name": "Filter Integers",
      "is_streaming": false,
      "uid": "657ca399-5234-4b1c-91b5-a8b8be1c8f26",
      "interaction_view": "scikit_classifiers_filter_integers",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "construction_work .png",
      "windows_queue": false,
      "post_interact_action": "scikit_classifiers_post_filter_integers",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "scikit_classifiers_pre_filter_integers",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": true,
      "has_progress_bar": false,
      "order": 2,
      "description": ""
    }
  },
  {
    "pk": 549,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 209,
      "name": "Integer List",
      "short_name": "lst",
      "uid": "9ae47c5e-539c-476a-8c7e-812ab2a5bb1b",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": null,
      "variable": "intList",
      "parameter": false,
      "order": 1,
      "description": "List of integers"
    }
  },
  {
    "pk": 217,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 209,
      "name": "Filtered Integer List",
      "short_name": "lst",
      "variable": "intList",
      "uid": "db559b89-2299-4cfe-8f6e-c90e9d7c61c3",
      "order": 1,
      "description": "Filtered list of integers"
    }
  },
  {
    "pk": 210,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 57,
      "treeview_image": "",
      "name": "Sum Integers",
      "is_streaming": false,
      "uid": "09b75459-eba9-4fb2-958e-faa13fd80ce7",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "construction_work .png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "scikit_classifiers_sum_integers",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 3,
      "description": ""
    }
  },
  {
    "pk": 550,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 210,
      "name": "Integer List",
      "short_name": "lst",
      "uid": "12eedbf8-2c89-47e5-8b2c-6ad1f0f78ab7",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": null,
      "variable": "intList",
      "parameter": false,
      "order": 1,
      "description": "List of integers"
    }
  },
  {
    "pk": 218,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 210,
      "name": "Sum",
      "short_name": "int",
      "variable": "sum",
      "uid": "39e54084-06fd-4a0c-983d-8310de34ef59",
      "order": 1,
      "description": "Sum of integer list"
    }
  },
  {
    "pk": 211,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 57,
      "treeview_image": "",
      "name": "Display Summation",
      "is_streaming": false,
      "uid": "47c4d92b-af90-4307-b9b0-2f4b36ff9f93",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "construction_work .png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "scikit_classifiers_display_summation",
      "streaming_visualization_view": "",
      "action": "scikit_classifiers_pre_display_summation",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 4,
      "description": ""
    }
  },
  {
    "pk": 551,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 211,
      "name": "Integer List",
      "short_name": "lst",
      "uid": "c84bc35f-2df0-4a6b-9ab4-18e9a19ee054",
      "default": "",
      "required": false,
      "multi": false,
      "parameter_type": null,
      "variable": "intList",
      "parameter": false,
      "order": 1,
      "description": "List of integers"
    }
  },
  {
    "pk": 552,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 211,
      "name": "Sum",
      "short_name": "int",
      "uid": "e54f725e-b058-49d0-998b-4c4e99c1a32f",
      "default": "",
      "required": false,
      "multi": false,
      "parameter_type": null,
      "variable": "sum",
      "parameter": false,
      "order": 2,
      "description": "Sum (possibly correct) of integer list"
    }
  },
  {
    "pk": 46,
    "model": "workflows.category",
    "fields": {
      "uid": "46050a99-188d-40e1-90e5-0c1912059fa7",
      "parent": null,
      "workflow": null,
      "user": null,
      "order": 9,
      "name": "Classification"
    }
  },
  {
    "pk": 58,
    "model": "workflows.category",
    "fields": {
      "uid": "cb54c8a7-2681-47ed-8321-2ab093d32662",
      "parent": 46,
      "workflow": null,
      "user": null,
      "order": 3,
      "name": "Scikit"
    }
  },
  {
    "pk": 218,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 58,
      "treeview_image": "",
      "name": "Decision Tree",
      "is_streaming": false,
      "uid": "a49766ca-d6ad-4183-8885-721e86217a1c",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "scikit_Tree-icon.png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "sc_decision_tree",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "A decision tree is a decision support tool that uses a tree-like graph or model of decisions and their possible consequences, including chance event outcomes, resource costs, and utility."
    }
  },
  {
    "pk": 569,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 218,
      "name": "Max features",
      "short_name": "mxf",
      "uid": "3e4ce114-9637-4889-b163-e74c641c460d",
      "default": "auto",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "max_features",
      "parameter": true,
      "order": 1,
      "description": "The number of features to consider when looking for the best split:\r\nIf int, then consider max_features features at each split.\r\nIf float, then max_features is a percentage and int(max_features * n_features) features are considered at each split.\r\nIf “auto”, then max_features=sqrt(n_features).\r\nIf “sqrt”, then max_features=sqrt(n_features).\r\nIf “log2”, then max_features=log2(n_features).\r\nIf None, then max_features=n_features."
    }
  },
  {
    "pk": 570,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 218,
      "name": "Max depth ",
      "short_name": "mxd",
      "uid": "a8a60a8b-dc57-48ad-a724-487e28751987",
      "default": "100",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "max_depth",
      "parameter": true,
      "order": 2,
      "description": "The maximum depth of the tree. If None, then nodes are expanded until all leaves are pure or until all leaves contain less than min_samples_split samples. "
    }
  },
  {
    "pk": 225,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 218,
      "name": "Classifier",
      "short_name": "csf",
      "variable": "classifier",
      "uid": "1b63f0a1-0588-40dc-aaa8-79470bc0a1fa",
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 212,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 58,
      "treeview_image": "",
      "name": "Gaussian Naive Bayes Classifier",
      "is_streaming": false,
      "uid": "2f5e2bd7-5d8c-4631-b843-2a9016bd1fe6",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "classifier_naive_bayes_image.png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "sc_gaussian_nb",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "Gaussian Naive Bayes.  When dealing with continuous data, a typical assumption is that the continuous values associated with each class are distributed according to a Gaussian distribution."
    }
  },
  {
    "pk": 219,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 212,
      "name": "Classifier",
      "short_name": "csf",
      "variable": "classifier",
      "uid": "d714edc2-c59f-478f-a746-cc6a6577f534",
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 216,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 58,
      "treeview_image": "",
      "name": "k-Nearest Neighbours",
      "is_streaming": false,
      "uid": "588104e6-365c-4a5f-8b80-5837a05e01d4",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "classifier_knn_image.png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "sc_knn",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "Classifier implementing the k-nearest neighbors vote."
    }
  },
  {
    "pk": 564,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 216,
      "name": "Number of neighbors",
      "short_name": "nne",
      "uid": "5bd7564a-a9a4-4dc4-ad57-13c00fb47200",
      "default": "5",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "n_neighbors",
      "parameter": true,
      "order": 1,
      "description": "Number of neighbors to use by default for k_neighbors queries."
    }
  },
  {
    "pk": 566,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 216,
      "name": "Algorithm",
      "short_name": "alg",
      "uid": "d1e42d54-c63c-4672-920c-4bc2d054f1b3",
      "default": "auto",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "algorithm",
      "parameter": true,
      "order": 2,
      "description": "Algorithm used to compute the nearest neighbors:\r\n‘ball_tree’ will use BallTree\r\n‘kd_tree’ will use KDTree\r\n‘brute’ will use a brute-force search.\r\n‘auto’ will attempt to decide the most appropriate algorithm based on the values passed to fit method.\r\nNote: fitting on sparse input will override the setting of this parameter, using brute force."
    }
  },
  {
    "pk": 155,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "c8c8d4fc-019f-45a9-bba3-4d1b44c84cfe",
      "abstract_input": 566,
      "value": "ball_tree",
      "name": "ball tree"
    }
  },
  {
    "pk": 157,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "e8c64f20-490f-4a31-aff8-588f9232d9dc",
      "abstract_input": 566,
      "value": "brute",
      "name": "brute"
    }
  },
  {
    "pk": 156,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "ae295113-d31f-43eb-9050-808a49760a99",
      "abstract_input": 566,
      "value": "kd_tree",
      "name": "kd tree"
    }
  },
  {
    "pk": 154,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "4e5c5456-a65e-4809-9800-b773e6267c0e",
      "abstract_input": 566,
      "value": "auto",
      "name": "most appropriate (automatically)"
    }
  },
  {
    "pk": 565,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 216,
      "name": "Weights",
      "short_name": "wei",
      "uid": "0bd35788-b7cf-463d-9327-7b81bdad358e",
      "default": "uniform",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "weights",
      "parameter": true,
      "order": 3,
      "description": "weight function used in prediction. Possible values:\r\n‘uniform’ : uniform weights. All points in each neighborhood are weighted equally.\r\n‘distance’ : weight points by the inverse of their distance. in this case, closer neighbors of a query point will have a greater influence than neighbors which are further away.\r\n[callable] : a user-defined function which accepts an array of distances, and returns an array of the same shape containing the weights.\r\nUniform weights are used by default."
    }
  },
  {
    "pk": 153,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "fc673c5a-118f-4538-9c3f-06e42de311b3",
      "abstract_input": 565,
      "value": "distance",
      "name": "distance"
    }
  },
  {
    "pk": 152,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "15104e2e-020b-4364-8e75-7abe3453847b",
      "abstract_input": 565,
      "value": "uniform",
      "name": "uniform"
    }
  },
  {
    "pk": 223,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 216,
      "name": "Classifier",
      "short_name": "csf",
      "variable": "classifier",
      "uid": "1317a3d6-0e37-4579-a82c-3697cef1e7dd",
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 214,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 58,
      "treeview_image": "",
      "name": "Linear Support Vector Classification",
      "is_streaming": false,
      "uid": "b6919040-e04c-4f52-9bb4-cd2c2b7a963c",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "classifier_svm_image.png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "sc_linear_svc",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "Linear Support Vector Classification. Similar to SVC with parameter kernel=’linear’, but implemented in terms of liblinear rather than libsvm, so it has more flexibility in the choice of penalties and loss functions and should scale better (to large numbers of samples)."
    }
  },
  {
    "pk": 557,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 214,
      "name": "C",
      "short_name": "ccc",
      "uid": "2d4cbcee-9ca4-4db2-ad5f-aa86aa5e91cb",
      "default": "1.0",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "C",
      "parameter": true,
      "order": 1,
      "description": "Penalty parameter C of the error term."
    }
  },
  {
    "pk": 560,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 214,
      "name": "Loss",
      "short_name": "lss",
      "uid": "119c1119-8669-4194-9ba5-89550cfa6d96",
      "default": "l2",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "loss",
      "parameter": true,
      "order": 2,
      "description": "Specifies the loss function. ‘l1’ is the hinge loss (standard SVM) while ‘l2’ is the squared hinge loss."
    }
  },
  {
    "pk": 145,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "402c61c1-f2e4-4a2c-969e-ac0751fbc8c5",
      "abstract_input": 560,
      "value": "l1",
      "name": "l1"
    }
  },
  {
    "pk": 146,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "5fd8b8dd-8b3b-4996-ba83-ae2dfa9c8a4c",
      "abstract_input": 560,
      "value": "l2",
      "name": "l2"
    }
  },
  {
    "pk": 559,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 214,
      "name": "Penalty",
      "short_name": "pen",
      "uid": "78a41810-b898-4990-bd8d-bd05ba6544da",
      "default": "l2",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "penalty",
      "parameter": true,
      "order": 3,
      "description": "Specifies the norm used in the penalization. The ‘l2’ penalty is the standard used in SVC. The ‘l1’ leads to coef_ vectors that are sparse."
    }
  },
  {
    "pk": 143,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "db887f99-13c5-4f19-9b44-ac2ed41155fa",
      "abstract_input": 559,
      "value": "l1",
      "name": "l1"
    }
  },
  {
    "pk": 144,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "a93af0bc-1654-4891-bea9-51cb93cf44f1",
      "abstract_input": 559,
      "value": "l2",
      "name": "l2"
    }
  },
  {
    "pk": 558,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 214,
      "name": "Multi class",
      "short_name": "mlc",
      "uid": "319161b1-be5d-4260-8a8c-583083804e60",
      "default": "ovr",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "multi_class",
      "parameter": true,
      "order": 4,
      "description": "Determines the multi-class strategy if y contains more than two classes. ovr trains n_classes one-vs-rest classifiers, while crammer_singer optimizes a joint objective over all classes. While crammer_singer is interesting from an theoretical perspective as it is consistent it is seldom used in practice and rarely leads to better accuracy and is more expensive to compute. If crammer_singer is choosen, the options loss, penalty and dual will be ignored."
    }
  },
  {
    "pk": 142,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "6ab05b2c-7706-4b89-ab64-1beb161c1085",
      "abstract_input": 558,
      "value": "crammer_singer",
      "name": "crammer singer"
    }
  },
  {
    "pk": 141,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "aa692bd8-730f-49f9-b800-4430d07edbc9",
      "abstract_input": 558,
      "value": "ovr",
      "name": "ovr"
    }
  },
  {
    "pk": 221,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 214,
      "name": "Classifier",
      "short_name": "csf",
      "variable": "classifier",
      "uid": "a15c4049-0dea-4b81-a073-1d96926313ab",
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 217,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 58,
      "treeview_image": "",
      "name": "Logistic regression",
      "is_streaming": false,
      "uid": "e67c914d-07e9-4b5e-80f9-673c5fbbbfd2",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "scikit_LogisticRegression.png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "sc_logreg",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "Logistic regression, despite its name, is a linear model for classification rather than regression. Logistic regression is also known in the literature as logit regression, maximum-entropy classification (MaxEnt) or the log-linear classifier. In this model, the probabilities describing the possible outcomes of a single trial are modeled using a logistic function."
    }
  },
  {
    "pk": 568,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 217,
      "name": "Penalty",
      "short_name": "pen",
      "uid": "293f61a4-d662-4d1c-914e-0fa0d0786912",
      "default": "l1",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "penalty",
      "parameter": true,
      "order": 1,
      "description": "Used to specify the norm used in the penalization."
    }
  },
  {
    "pk": 158,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "ac1b9369-dbf7-4172-a4fd-fd9ccde768b4",
      "abstract_input": 568,
      "value": "l1",
      "name": "l1"
    }
  },
  {
    "pk": 159,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "48f1dce5-ece5-436d-a23a-b899fff7e6c7",
      "abstract_input": 568,
      "value": "l2",
      "name": "l2"
    }
  },
  {
    "pk": 567,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 217,
      "name": "C",
      "short_name": "ccc",
      "uid": "2869f6df-0431-4a87-8790-7236d78fcc88",
      "default": "1.0",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "C",
      "parameter": true,
      "order": 2,
      "description": "Inverse of regularization strength; must be a positive float. Like in support vector machines, smaller values specify stronger regularization."
    }
  },
  {
    "pk": 224,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 217,
      "name": "Classifier",
      "short_name": "csf",
      "variable": "classifier",
      "uid": "78830a40-559b-4375-911f-6afd1348e757",
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 213,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 58,
      "treeview_image": "",
      "name": "Multinomial Naive Bayes Classifier",
      "is_streaming": false,
      "uid": "b0c86eed-6ce9-4c0d-b896-706b7810b173",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "classifier_naive_bayes_image.png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "sc_multinomial_nb",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification). The multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work."
    }
  },
  {
    "pk": 555,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 213,
      "name": "Alpha",
      "short_name": "alp",
      "uid": "5004eb4f-a852-4a88-a51b-1c2cca8f6427",
      "default": "1.0",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "alpha",
      "parameter": true,
      "order": 1,
      "description": "Additive (Laplace/Lidstone) smoothing parameter (0 for no smoothing). "
    }
  },
  {
    "pk": 556,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 213,
      "name": "Fit prior",
      "short_name": "fpr",
      "uid": "0b52c6d6-724c-4b8a-831a-71f66548eff3",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": "checkbox",
      "variable": "fit_prior",
      "parameter": true,
      "order": 1,
      "description": "Whether to learn class prior probabilities or not.\r\n        If false, a uniform prior will be used."
    }
  },
  {
    "pk": 220,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 213,
      "name": "Classifier",
      "short_name": "csf",
      "variable": "classifier",
      "uid": "99ef0e30-5970-430f-a62b-3c436d543c4d",
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 215,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 58,
      "treeview_image": "",
      "name": "Support Vector Classification",
      "is_streaming": false,
      "uid": "890cfb15-c08a-4487-bfa0-0a0192b3885f",
      "interaction_view": "",
      "image": "",
      "package": "scikit_classifiers",
      "static_image": "classifier_svm_image.png",
      "windows_queue": false,
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "streaming_visualization_view": "",
      "action": "sc_svc",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "Implementation of Support Vector Machine classifier using libsvm: the kernel can be non-linear but its SMO algorithm does not scale to large number of samples as LinearSVC does. Furthermore SVC multi-class mode is implemented using one vs one scheme while LinearSVC uses one vs the rest."
    }
  },
  {
    "pk": 561,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 215,
      "name": "C",
      "short_name": "ccc",
      "uid": "a88c330e-f55a-4ca9-9c7f-c818651b42a4",
      "default": "1.0",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "C",
      "parameter": true,
      "order": 1,
      "description": "Penalty parameter C of the error term."
    }
  },
  {
    "pk": 562,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 215,
      "name": "Degree",
      "short_name": "deg",
      "uid": "96d70c8f-8da5-4c84-88be-f2f447c1b715",
      "default": "3",
      "required": true,
      "multi": false,
      "parameter_type": "text",
      "variable": "degree",
      "parameter": true,
      "order": 2,
      "description": "Degree of the polynomial kernel function (‘poly’). Ignored by all other kernels."
    }
  },
  {
    "pk": 563,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 215,
      "name": "Kernel",
      "short_name": "ker",
      "uid": "78abb5f8-3ed5-49f1-995d-7dfb81977a79",
      "default": "rbf",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "kernel",
      "parameter": true,
      "order": 3,
      "description": "Specifies the kernel type to be used in the algorithm. It must be one of ‘linear’, ‘poly’, ‘rbf’, ‘sigmoid’, ‘precomputed’ or a callable. If none is given, ‘rbf’ will be used. If a callable is given it is used to precompute the kernel matrix."
    }
  },
  {
    "pk": 147,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "2d008858-03a0-4b4d-b3d8-af2c4210075e",
      "abstract_input": 563,
      "value": "linear",
      "name": "linear"
    }
  },
  {
    "pk": 148,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "2d463c16-e4f5-40d3-a752-c881abe075f1",
      "abstract_input": 563,
      "value": "poly",
      "name": "poly"
    }
  },
  {
    "pk": 150,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "c9f66639-75db-48b1-972e-012408da741e",
      "abstract_input": 563,
      "value": "precomputed",
      "name": "precomputed"
    }
  },
  {
    "pk": 151,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "875652ff-d962-4544-a081-3bb829cbae04",
      "abstract_input": 563,
      "value": "rbf",
      "name": "rbf"
    }
  },
  {
    "pk": 149,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "c780c9c3-b981-4dba-947f-93dbb3ac6f45",
      "abstract_input": 563,
      "value": "sigmoid",
      "name": "sigmoid"
    }
  },
  {
    "pk": 222,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 215,
      "name": "Classifier",
      "short_name": "csf",
      "variable": "classifier",
      "uid": "350f1806-86ef-46f4-8027-0b2d0fb13e74",
      "order": 1,
      "description": ""
    }
  }
]